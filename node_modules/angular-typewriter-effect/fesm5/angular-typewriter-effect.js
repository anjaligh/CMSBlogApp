import { Injectable, ɵɵdefineInjectable, Component, Input, NgModule } from '@angular/core';
import { __awaiter, __generator } from 'tslib';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/typewriter.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TypewriterService = /** @class */ (function () {
    function TypewriterService() {
    }
    TypewriterService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    TypewriterService.ctorParameters = function () { return []; };
    /** @nocollapse */ TypewriterService.ngInjectableDef = ɵɵdefineInjectable({ factory: function TypewriterService_Factory() { return new TypewriterService(); }, token: TypewriterService, providedIn: "root" });
    return TypewriterService;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/typewriter.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TypewriterComponent = /** @class */ (function () {
    function TypewriterComponent() {
        this.writeText = '';
        this.loopNumber = 0;
        this.isDeleting = false;
    }
    /**
     * @return {?}
     */
    TypewriterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.writeLine(); }), 500);
    };
    /**
     * @return {?}
     */
    TypewriterComponent.prototype.writeLine = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var i = this.loopNumber % this.StringList.length;
        /** @type {?} */
        var fullTxt = this.StringList[i];
        if (this.isDeleting) {
            this.writeText = fullTxt.substring(0, this.writeText.length - 1);
        }
        else {
            this.writeText = fullTxt.substring(0, this.writeText.length + 1);
        }
        /** @type {?} */
        var delTime = 90;
        if (this.isDeleting) {
            delTime /= 2;
        }
        if (!this.isDeleting && this.writeText === fullTxt) {
            delTime = this.speed || 700;
            this.isDeleting = true;
        }
        else if (this.isDeleting && this.writeText === '') {
            this.isDeleting = false, this.loopNumber++;
            delTime = this.speed || 700;
        }
        setTimeout((/**
         * @return {?}
         */
        function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.writeLine()];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); }), delTime);
    };
    TypewriterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngtypewriter',
                    template: "\n  <span style=\"border-right:1px solid #666;animation:blink 1s; padding-right:3px;\">{{writeText}}</span>\n  ",
                    styles: ["@-webkit-keyframes blink{50%{border-right:transparent}}@keyframes blink{50%{border-right:transparent}}"]
                }] }
    ];
    /** @nocollapse */
    TypewriterComponent.ctorParameters = function () { return []; };
    TypewriterComponent.propDecorators = {
        StringList: [{ type: Input }],
        speed: [{ type: Input }]
    };
    return TypewriterComponent;
}());
if (false) {
    /** @type {?} */
    TypewriterComponent.prototype.StringList;
    /** @type {?} */
    TypewriterComponent.prototype.speed;
    /** @type {?} */
    TypewriterComponent.prototype.writeText;
    /** @type {?} */
    TypewriterComponent.prototype.loopNumber;
    /** @type {?} */
    TypewriterComponent.prototype.isDeleting;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/typewriter.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AngularTypewriterEffectModule = /** @class */ (function () {
    function AngularTypewriterEffectModule() {
    }
    AngularTypewriterEffectModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [TypewriterComponent],
                    imports: [],
                    exports: [TypewriterComponent]
                },] }
    ];
    return AngularTypewriterEffectModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: angular-typewriter-effect.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { AngularTypewriterEffectModule, TypewriterComponent, TypewriterService };
//# sourceMappingURL=angular-typewriter-effect.js.map

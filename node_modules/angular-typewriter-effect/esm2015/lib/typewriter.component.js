/**
 * @fileoverview added by tsickle
 * Generated from: lib/typewriter.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
export class TypewriterComponent {
    constructor() {
        this.writeText = '';
        this.loopNumber = 0;
        this.isDeleting = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        setTimeout((/**
         * @return {?}
         */
        () => this.writeLine()), 500);
    }
    /**
     * @return {?}
     */
    writeLine() {
        /** @type {?} */
        let i = this.loopNumber % this.StringList.length;
        /** @type {?} */
        let fullTxt = this.StringList[i];
        if (this.isDeleting) {
            this.writeText = fullTxt.substring(0, this.writeText.length - 1);
        }
        else {
            this.writeText = fullTxt.substring(0, this.writeText.length + 1);
        }
        /** @type {?} */
        let delTime = 90;
        if (this.isDeleting) {
            delTime /= 2;
        }
        if (!this.isDeleting && this.writeText === fullTxt) {
            delTime = this.speed || 700;
            this.isDeleting = true;
        }
        else if (this.isDeleting && this.writeText === '') {
            this.isDeleting = false, this.loopNumber++;
            delTime = this.speed || 700;
        }
        setTimeout((/**
         * @return {?}
         */
        () => tslib_1.__awaiter(this, void 0, void 0, function* () { return yield this.writeLine(); })), delTime);
    }
}
TypewriterComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngtypewriter',
                template: `
  <span style="border-right:1px solid #666;animation:blink 1s; padding-right:3px;">{{writeText}}</span>
  `,
                styles: ["@-webkit-keyframes blink{50%{border-right:transparent}}@keyframes blink{50%{border-right:transparent}}"]
            }] }
];
/** @nocollapse */
TypewriterComponent.ctorParameters = () => [];
TypewriterComponent.propDecorators = {
    StringList: [{ type: Input }],
    speed: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TypewriterComponent.prototype.StringList;
    /** @type {?} */
    TypewriterComponent.prototype.speed;
    /** @type {?} */
    TypewriterComponent.prototype.writeText;
    /** @type {?} */
    TypewriterComponent.prototype.loopNumber;
    /** @type {?} */
    TypewriterComponent.prototype.isDeleting;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXdyaXRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXR5cGV3cml0ZXItZWZmZWN0LyIsInNvdXJjZXMiOlsibGliL3R5cGV3cml0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUXpELE1BQU0sT0FBTyxtQkFBbUI7SUFNOUI7UUFEQSxjQUFTLEdBQUUsRUFBRSxDQUFDO1FBQUMsZUFBVSxHQUFFLENBQUMsQ0FBQztRQUFDLGVBQVUsR0FBRSxLQUFLLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVqQixRQUFRO1FBQ04sVUFBVTs7O1FBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxHQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Ozs7SUFFRCxTQUFTOztZQUNILENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTTs7WUFDNUMsT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBRWhDLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsQixJQUFJLENBQUMsU0FBUyxHQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO1NBQ2pFO2FBQU07WUFDTCxJQUFJLENBQUMsU0FBUyxHQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO1NBQ2hFOztZQUVHLE9BQU8sR0FBRyxFQUFFO1FBQ2hCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDLENBQUM7U0FBRTtRQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLE9BQU8sRUFBRTtZQUNsRCxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxHQUFHLENBQUM7WUFDNUIsSUFBSSxDQUFDLFVBQVUsR0FBRSxJQUFJLENBQUE7U0FDdEI7YUFBTSxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFNBQVMsS0FBSyxFQUFFLEVBQUU7WUFDbkQsSUFBSSxDQUFDLFVBQVUsR0FBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFBO1lBQ3pDLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQztTQUM3QjtRQUNELFVBQVU7OztRQUFDLEdBQVMsRUFBRSx3REFBQyxPQUFBLE1BQU0sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFBLEdBQUEsR0FBRSxPQUFPLENBQUMsQ0FBQztJQUMxRCxDQUFDOzs7WUF2Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxjQUFjO2dCQUN4QixRQUFRLEVBQUU7O0dBRVQ7O2FBRUY7Ozs7O3lCQUdFLEtBQUs7b0JBRUwsS0FBSzs7OztJQUZOLHlDQUFtQzs7SUFFbkMsb0NBQWU7O0lBQ2Ysd0NBQWM7O0lBQUMseUNBQWM7O0lBQUMseUNBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3R5cGV3cml0ZXInLFxuICB0ZW1wbGF0ZTogYFxuICA8c3BhbiBzdHlsZT1cImJvcmRlci1yaWdodDoxcHggc29saWQgIzY2NjthbmltYXRpb246YmxpbmsgMXM7IHBhZGRpbmctcmlnaHQ6M3B4O1wiPnt7d3JpdGVUZXh0fX08L3NwYW4+XG4gIGAsXG4gIHN0eWxlVXJsczogWycuL3R5cGV3cml0ZXIuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVHlwZXdyaXRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgU3RyaW5nTGlzdDogQXJyYXk8c3RyaW5nPjtcblxuICBASW5wdXQoKSBzcGVlZDtcbiAgd3JpdGVUZXh0PSAnJzsgbG9vcE51bWJlcj0gMDsgaXNEZWxldGluZz0gZmFsc2U7XG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLndyaXRlTGluZSgpLCA1MDApOyBcbiAgfVxuXG4gIHdyaXRlTGluZSgpIHtcbiAgICBsZXQgaSA9IHRoaXMubG9vcE51bWJlciAlIHRoaXMuU3RyaW5nTGlzdC5sZW5ndGg7XG4gICAgbGV0IGZ1bGxUeHQgPSB0aGlzLlN0cmluZ0xpc3RbaV07XG5cbiAgICBpZiAodGhpcy5pc0RlbGV0aW5nKSB7XG4gICAgICAgdGhpcy53cml0ZVRleHQ9IGZ1bGxUeHQuc3Vic3RyaW5nKDAsIHRoaXMud3JpdGVUZXh0Lmxlbmd0aCAtIDEpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMud3JpdGVUZXh0PSBmdWxsVHh0LnN1YnN0cmluZygwLCB0aGlzLndyaXRlVGV4dC5sZW5ndGggKyAxKVxuICAgIH1cblxuICAgIGxldCBkZWxUaW1lID0gOTA7XG4gICAgaWYgKHRoaXMuaXNEZWxldGluZykgeyBkZWxUaW1lIC89IDI7IH1cbiAgICBpZiAoIXRoaXMuaXNEZWxldGluZyAmJiB0aGlzLndyaXRlVGV4dCA9PT0gZnVsbFR4dCkge1xuICAgICAgZGVsVGltZSA9IHRoaXMuc3BlZWQgfHwgNzAwO1xuICAgICAgdGhpcy5pc0RlbGV0aW5nPSB0cnVlXG4gICAgfSBlbHNlIGlmICh0aGlzLmlzRGVsZXRpbmcgJiYgdGhpcy53cml0ZVRleHQgPT09ICcnKSB7XG4gICAgICB0aGlzLmlzRGVsZXRpbmc9IGZhbHNlLCB0aGlzLmxvb3BOdW1iZXIrK1xuICAgICAgZGVsVGltZSA9IHRoaXMuc3BlZWQgfHwgNzAwO1xuICAgIH1cbiAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IGF3YWl0IHRoaXMud3JpdGVMaW5lKCksIGRlbFRpbWUpO1xuICB9XG59XG4iXX0=
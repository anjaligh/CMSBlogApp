import { Injectable, ɵɵdefineInjectable, Component, Input, NgModule } from '@angular/core';
import { __awaiter } from 'tslib';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/typewriter.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
class TypewriterService {
    constructor() { }
}
TypewriterService.ɵfac = function TypewriterService_Factory(t) { return new (t || TypewriterService)(); };
TypewriterService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TypewriterService, factory: TypewriterService.ɵfac, providedIn: 'root' });
/** @nocollapse */
TypewriterService.ctorParameters = () => [];
/** @nocollapse */ TypewriterService.ngInjectableDef = ɵɵdefineInjectable({ factory: function TypewriterService_Factory() { return new TypewriterService(); }, token: TypewriterService, providedIn: "root" });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TypewriterService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * Generated from: lib/typewriter.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TypewriterComponent {
    constructor() {
        this.writeText = '';
        this.loopNumber = 0;
        this.isDeleting = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        setTimeout((/**
         * @return {?}
         */
        () => this.writeLine()), 500);
    }
    /**
     * @return {?}
     */
    writeLine() {
        /** @type {?} */
        let i = this.loopNumber % this.StringList.length;
        /** @type {?} */
        let fullTxt = this.StringList[i];
        if (this.isDeleting) {
            this.writeText = fullTxt.substring(0, this.writeText.length - 1);
        }
        else {
            this.writeText = fullTxt.substring(0, this.writeText.length + 1);
        }
        /** @type {?} */
        let delTime = 90;
        if (this.isDeleting) {
            delTime /= 2;
        }
        if (!this.isDeleting && this.writeText === fullTxt) {
            delTime = this.speed || 700;
            this.isDeleting = true;
        }
        else if (this.isDeleting && this.writeText === '') {
            this.isDeleting = false, this.loopNumber++;
            delTime = this.speed || 700;
        }
        setTimeout((/**
         * @return {?}
         */
        () => __awaiter(this, void 0, void 0, function* () { return yield this.writeLine(); })), delTime);
    }
}
TypewriterComponent.ɵfac = function TypewriterComponent_Factory(t) { return new (t || TypewriterComponent)(); };
TypewriterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TypewriterComponent, selectors: [["ngtypewriter"]], inputs: { StringList: "StringList", speed: "speed" }, decls: 2, vars: 1, consts: [[2, "border-right", "1px solid #666", "animation", "blink 1s", "padding-right", "3px"]], template: function TypewriterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.writeText);
    } }, styles: ["@-webkit-keyframes blink{50%{border-right:transparent}}@keyframes blink{50%{border-right:transparent}}"] });
/** @nocollapse */
TypewriterComponent.ctorParameters = () => [];
TypewriterComponent.propDecorators = {
    StringList: [{ type: Input }],
    speed: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TypewriterComponent, [{
        type: Component,
        args: [{ selector: 'ngtypewriter', template: `
  <span style="border-right:1px solid #666;animation:blink 1s; padding-right:3px;">{{writeText}}</span>
  `, styles: ["@-webkit-keyframes blink{50%{border-right:transparent}}@keyframes blink{50%{border-right:transparent}}"] }]
    }], function () { return []; }, { StringList: [{
            type: Input
        }], speed: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    TypewriterComponent.prototype.StringList;
    /** @type {?} */
    TypewriterComponent.prototype.speed;
    /** @type {?} */
    TypewriterComponent.prototype.writeText;
    /** @type {?} */
    TypewriterComponent.prototype.loopNumber;
    /** @type {?} */
    TypewriterComponent.prototype.isDeleting;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/typewriter.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AngularTypewriterEffectModule {
}
AngularTypewriterEffectModule.ɵfac = function AngularTypewriterEffectModule_Factory(t) { return new (t || AngularTypewriterEffectModule)(); };
AngularTypewriterEffectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AngularTypewriterEffectModule });
AngularTypewriterEffectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularTypewriterEffectModule, [{
        type: NgModule,
        args: [{
                declarations: [TypewriterComponent],
                imports: [],
                exports: [TypewriterComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularTypewriterEffectModule, { declarations: [TypewriterComponent], exports: [TypewriterComponent] }); })();

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: angular-typewriter-effect.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { AngularTypewriterEffectModule, TypewriterComponent, TypewriterService };

//# sourceMappingURL=angular-typewriter-effect.js.map